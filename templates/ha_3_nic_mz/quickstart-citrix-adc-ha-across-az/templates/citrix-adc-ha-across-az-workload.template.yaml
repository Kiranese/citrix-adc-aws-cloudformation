---
AWSTemplateFormatVersion: "2010-09-09"
Description: "
  This template creates a HA pair across Availability Zones with two instance of Citrix ADC:
  3 ENIs associated to 3 VPC subnets (Management, Client, Server) on primary and 3 ENIs associated
  to 3 VPC subnets (Management, Client, Server) on secondary.
  All the resource names created by this CFT will be prefixed with a tagName of the stackname
  **WARNING** This template creates AWS resources.
  You will be billed for the AWS resources used if you create a stack from this template."

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network configuration
        Parameters:
          - VPCID
          - VPCCIDR
          - RestrictedWebAppCIDR
          - PrimaryManagementPrivateSubnetID
          - PrimaryClientPublicSubnetID
          - PrimaryServerPrivateSubnetID
          - SecondaryManagementPrivateSubnetID
          - SecondaryClientPublicSubnetID
          - SecondaryServerPrivateSubnetID
          - PrimaryManagementPrivateIP
          - PrimaryClientPrivateIP
          - PrimaryServerPrivateIP
          - SecondaryManagementPrivateIP
          - SecondaryClientPrivateIP
          - SecondaryServerPrivateIP
          - VPCTenancy

      - Label:
          default: Citrix ADC configuration
        Parameters:
          - CitrixADCImageID
          - KeyPairName
          - CitrixADCInstanceType

    ParameterLabels:
      CitrixADCImageID:
        default: Citrix ADC AMI ID

      VPCID:
        default: VPC ID
      VPCCIDR:
        default: VPC CIDR
      PrimaryManagementPrivateSubnetID:
        default: Primary Management Private Subnet ID
      PrimaryClientPublicSubnetID:
        default: Primary Client Public Subnet ID
      PrimaryServerPrivateSubnetID:
        default: Primary Server Private Subnet ID

      RestrictedWebAppCIDR:
        default: Remote web traffic CIDR

      SecondaryManagementPrivateSubnetID:
        default: Secondary Management Private Subnet ID
      SecondaryClientPublicSubnetID:
        default: Secondary Client Public Subnet ID
      SecondaryServerPrivateSubnetID:
        default: Secondary Server Private Subnet ID

      PrimaryManagementPrivateIP:
        default: Primary Management Private IP
      PrimaryClientPrivateIP:
        default: Primary Client Private IP
      PrimaryServerPrivateIP:
        default: Primary Server Private IP
      SecondaryManagementPrivateIP:
        default: Secondary Management Private IP
      SecondaryClientPrivateIP:
        default: Secondary Client Private IP
      SecondaryServerPrivateIP:
        default: Secondary Server Private IP

      VPCTenancy:
        default: VPC tenancy attribute
      KeyPairName:
        default: Key pair name
      CitrixADCInstanceType:
        default: Citrix ADC instance type

Parameters:
  CitrixADCImageID:
    Type: String
    Default: ""
    Description: >-
      [OPTIONAL] AMI ID of Citrix ADC to be provisioned. If left empty, "Citrix ADC VPX - Customer Licensed Version 13.0-41.20
      (https://aws.amazon.com/marketplace/pp/B00AA01BOE)" is provisioned by default
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID of existing Virtual Private Cloud (VPC)
  VPCCIDR:
    Description: CIDR Block for VPC
    Type: String
    Default: 10.0.0.0/16
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  VPCTenancy:
    Description: The allowed tenancy of instances launched into the VPC
    Type: String
    Default: default
    AllowedValues:
      - default
      - dedicated
  RestrictedWebAppCIDR:
    Type: String
    MinLength: 9
    MaxLength: 18
    Description:
      "A CIDR block that is allowed to access the ADC on tcp ports 80, 443.
      We recommend that you use a constrained CIDR range to
      reduce the potential of inbound attacks from unknown IP addresses."
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  PrimaryManagementPrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      Private Subnet ID of an existing subnet dedicated for Primary Management ENI.
      Note - The CIDR should be different from that of VPC.
      (VPC Stack Private Subnet 1B)
  PrimaryClientPublicSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      Public Subnet ID of an existing subnet dedicated for Primary Client ENI.
      (VPC Stack Public Subnet 1)
  PrimaryServerPrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      Private Subnet ID of an existing subnet dedicated for Primary Server ENI.
      (VPC Stack Private Subnet 1A)
  SecondaryManagementPrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      Private Subnet ID of an existing subnet dedicated for Secondary Management ENI.
      (VPC Stack Private Subnet 2B)
  SecondaryClientPublicSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      Public Subnet ID of an existing subnet dedicated for Secondary Client ENI.
      (VPC Stack Public Subnet 2)
  SecondaryServerPrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      Private Subnet ID of an existing subnet dedicated for Secondary Server ENI.
      (VPC Stack Private Subnet 2A)
  PrimaryManagementPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [OPTIONAL] Leave empty for automatic assignment. Private IP assigned to the Primary Management ENI (last octet has to be between 5 and 254).
  PrimaryClientPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [OPTIONAL] Leave empty for automatic assignment. Private IP assigned to the Primary Client ENI (last octet has to be between 5 and 254).
  PrimaryServerPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [OPTIONAL] Leave empty for automatic assignment. Private IP assigned to the Primary Server ENI (last octet has to be between 5 and 254).
  SecondaryManagementPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [OPTIONAL] Leave empty for automatic assignment. Private IP assigned to the Secondary Management ENI (last octet has to be between 5 and 254).
  SecondaryClientPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [OPTIONAL] Leave empty for automatic assignment. Private IP assigned to the Secondary Client ENI (last octet has to be between 5 and 254).
  SecondaryServerPrivateIP:
    Default: ""
    Type: String
    Description: >-
      [OPTIONAL] Leave empty for automatic assignment. Private IP assigned to the Secondary Server ENI (last octet has to be between 5 and 254).
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: >-
      S3 bucket name for the Quick Start assets. This bucket name can include
      numbers, lowercase letters, uppercase letters, and hyphens (-), but should
      not start or end with a hyphen. You can specify your own bucket if you
      copy all of the assets and submodules into it, if you want to override the
      Quick Start behavior for your specific implementation.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: "^[0-9a-zA-Z-/]*$"
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: quickstart-citrix-adc-ha-across-az/
    Description: >-
      [Note] The QSS3KeyPrefix should have to end with forward slash (/).
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  KeyPairName:
    ConstraintDescription: "Can contain only alphanumeric characters, spaces, dashes and underscores."
    Description: EC2 key pair name to remotely access ADCs on port 22 (SSH)
    MinLength: 1
    AllowedPattern: "[-_ a-zA-Z0-9]*"
    MaxLength: 64
    Type: AWS::EC2::KeyPair::KeyName
  CitrixADCInstanceType:
    Default: m4.xlarge
    ConstraintDescription: Must be a valid EC2 instance type.
    Type: String
    Description: Citrix ADC instance type
    AllowedValues:
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge


Resources:
  SecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/security-group.template.yaml
      Parameters:
        VPCID: !Ref VPCID
        VPCCIDR: !Ref VPCCIDR
        RestrictedWebAppCIDR: !Ref RestrictedWebAppCIDR

  IAMRoleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/iam.template.yaml

  PrimaryADCInstance:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/citrix-adc.template.yaml
      Parameters:
        CitrixADCImageID: !Ref CitrixADCImageID
        ManagementSecurityGroup: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        ClientSecurityGroup: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        ServerSecurityGroup: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        ManagementPrivateSubnetID: !Ref PrimaryManagementPrivateSubnetID
        ClientPublicSubnetID: !Ref PrimaryClientPublicSubnetID
        ServerPrivateSubnetID: !Ref PrimaryServerPrivateSubnetID
        ManagementPrivateIP: !Ref PrimaryManagementPrivateIP
        ClientPrivateIP: !Ref PrimaryClientPrivateIP
        ServerPrivateIP: !Ref PrimaryServerPrivateIP
        ClientENIEIP: 'Yes'
        ADCInstanceTagName: Primary
        KeyPairName: !Ref KeyPairName
        VPCTenancy: !Ref VPCTenancy
        CitrixNodesProfile: !GetAtt IAMRoleStack.Outputs.CitrixNodesProfile
        CitrixADCInstanceType: !Ref CitrixADCInstanceType

  SecondaryADCInstance:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/citrix-adc.template.yaml
      Parameters:
        CitrixADCImageID: !Ref CitrixADCImageID
        ManagementSecurityGroup: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        ClientSecurityGroup: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        ServerSecurityGroup: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        ManagementPrivateSubnetID: !Ref SecondaryManagementPrivateSubnetID
        ClientPublicSubnetID: !Ref SecondaryClientPublicSubnetID
        ServerPrivateSubnetID: !Ref SecondaryServerPrivateSubnetID
        ManagementPrivateIP: !Ref SecondaryManagementPrivateIP
        ClientPrivateIP: !Ref SecondaryClientPrivateIP
        ServerPrivateIP: !Ref SecondaryServerPrivateIP
        ClientENIEIP: 'No'
        ADCInstanceTagName: Secondary
        KeyPairName: !Ref KeyPairName
        VPCTenancy: !Ref VPCTenancy
        CitrixNodesProfile: !GetAtt IAMRoleStack.Outputs.CitrixNodesProfile
        CitrixADCInstanceType: !Ref CitrixADCInstanceType

  LambdaHAAZStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub >-
        https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/lambda-helper-ha-across-az.template.yaml
      Parameters:
        PrimaryInstanceID: !GetAtt PrimaryADCInstance.Outputs.CitrixADCInstanceID
        PrimaryManagementPrivateIP: !GetAtt PrimaryADCInstance.Outputs.ManagementPrivateNSIP
        PrimaryClientPrivateIP: !GetAtt PrimaryADCInstance.Outputs.ClientPrivateVIP
        PrimaryClientPublicSubnetID: !Ref PrimaryClientPublicSubnetID
        SecondaryInstanceID: !GetAtt SecondaryADCInstance.Outputs.CitrixADCInstanceID
        SecondaryManagementPrivateIP: !GetAtt SecondaryADCInstance.Outputs.ManagementPrivateNSIP
        SecondaryClientPrivateIP: !GetAtt SecondaryADCInstance.Outputs.ClientPrivateVIP
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        ManagementSecurityGroupID: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
        PrimarySubnetID: !Ref PrimaryManagementPrivateSubnetID
        SecondarySubnetID: !Ref SecondaryManagementPrivateSubnetID

Outputs:
  SecurityGroupID:
    Description: Security Group ID for ADC ENIs
    Value: !GetAtt SecurityGroupStack.Outputs.SecurityGroupID
  InstanceProfileName:
    Description: Instance Profile for ADCs
    Value: !GetAtt IAMRoleStack.Outputs.CitrixNodesProfile
  PrimaryADCInstanceID:
    Description: Primary ADC Instance ID
    Value: !GetAtt PrimaryADCInstance.Outputs.CitrixADCInstanceID
  PrimaryManagementPrivateNSIP:
    Description: Primary Management Private NSIP
    Value: !GetAtt PrimaryADCInstance.Outputs.ManagementPrivateNSIP
  PrimaryClientPublicEIP:
    Description: Primary Client Public EIP
    Value: !GetAtt PrimaryADCInstance.Outputs.ClientPublicEIP
  PrimaryClientPrivateVIP:
    Description: Primary Client Private VIP
    Value: !GetAtt PrimaryADCInstance.Outputs.ClientPrivateVIP
  SecondaryADCInstanceID:
    Description: Secondary ADC Instance ID
    Value: !GetAtt SecondaryADCInstance.Outputs.CitrixADCInstanceID
  SecondaryManagementPrivateNSIP:
    Description: Secondary Management Private NSIP
    Value: !GetAtt SecondaryADCInstance.Outputs.ManagementPrivateNSIP
  SecondaryClientPrivateVIP:
    Description: Secondary Client Private VIP
    Value: !GetAtt SecondaryADCInstance.Outputs.ClientPrivateVIP
