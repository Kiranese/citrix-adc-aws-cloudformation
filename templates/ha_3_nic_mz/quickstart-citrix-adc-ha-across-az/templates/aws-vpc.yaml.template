---
AWSTemplateFormatVersion: '2010-09-09'
Description:
  "This CFT creates VPC, subnets, and internate gateway associations
  **WARNING** This template creates AWS resources.
  You will be billed for the AWS resources used if you create a stack from this template."

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Availability Zone configuration
        Parameters:
          - PrimaryAvailabilityZone
          - SecondaryAvailabilityZone

      - Label:
          default: Network Configuration
        Parameters:
          - VPCCIDR
          - PrimaryManagementPublicSubnetCIDR
          - PrimaryClientPublicSubnetCIDR
          - PrimaryServerPrivateSubnetCIDR
          - SecondaryManagementPublicSubnetCIDR
          - SecondaryClientPublicSubnetCIDR
          - SecondaryServerPrivateSubnetCIDR
          - VPCTenancy

    ParameterLabels:
      VPCCIDR:
        default: VPC CIDR

      PrimaryAvailabilityZone:
        default: Primary Availability Zone
      PrimaryManagementPublicSubnetCIDR:
        default: Primary Management Public Subnet CIDR
      PrimaryClientPublicSubnetCIDR:
        default: Primary Client Public Subnet CIDR
      PrimaryServerPrivateSubnetCIDR:
        default: Primary Server Private Subnet CIDR

      SecondaryAvailabilityZone:
        default: Secondary Availability Zone
      SecondaryManagementPublicSubnetCIDR:
        default: Secondary Management Public Subnet CIDR
      SecondaryClientPublicSubnetCIDR:
        default: Secondary Client Public Subnet CIDR
      SecondaryServerPrivateSubnetCIDR:
        default: Secondary Server Private Subnet CIDR

      VPCTenancy:
        default: VPC tenancy attribute


Parameters:
  VPCCIDR:
    Description: CIDR Block for VPC
    Type: String
    Default: 10.0.0.0/16
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  VPCTenancy:
    Description: The allowed tenancy of instances launched into the VPC
    Type: String
    Default: default
    AllowedValues:
      - default
      - dedicated
  PrimaryAvailabilityZone:
    Description: Availability Zone for Primary CitrixADC deployment
    Type: AWS::EC2::AvailabilityZone::Name
  SecondaryAvailabilityZone:
    Description: Availability Zone for Secondary CitrixADC deployment
    Type: AWS::EC2::AvailabilityZone::Name
  PrimaryManagementPublicSubnetCIDR:
    Description: CIDR block for primary management public subnet located in the primary Availability Zone
    Type: String
    Default: 10.0.1.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  PrimaryClientPublicSubnetCIDR:
    Description: CIDR block for primary client public subnet located in the primary Availability Zone
    Type: String
    Default: 10.0.2.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  PrimaryServerPrivateSubnetCIDR:
    Description: CIDR block for primary server private subnet located in the primary Availability Zone
    Type: String
    Default: 10.0.3.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  SecondaryManagementPublicSubnetCIDR:
    Description: CIDR block for secondary management public subnet located in the secondary Availability Zone
    Type: String
    Default: 10.0.4.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  SecondaryClientPublicSubnetCIDR:
    Description: CIDR block for secondary client public subnet located in the secondary Availability Zone
    Type: String
    Default: 10.0.5.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.
  SecondaryServerPrivateSubnetCIDR:
    Description: CIDR block for secondary server private subnet located in the secondary Availability Zone
    Type: String
    Default: 10.0.6.0/24
    MinLength: 9
    MaxLength: 18
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: !Ref VPCTenancy
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref AWS::StackName
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  PrimaryManagementPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref PrimaryAvailabilityZone
      CidrBlock: !Ref PrimaryManagementPublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Primary Management Subnet
  PrimaryClientPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref PrimaryAvailabilityZone
      CidrBlock: !Ref PrimaryClientPublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Primary Client Subnet
  PrimaryServerPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref PrimaryAvailabilityZone
      CidrBlock: !Ref PrimaryServerPrivateSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Primary Server Subnet
  SecondaryManagementPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref SecondaryAvailabilityZone
      CidrBlock: !Ref SecondaryManagementPublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Secondary Management Subnet
  SecondaryClientPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref SecondaryAvailabilityZone
      CidrBlock: !Ref SecondaryClientPublicSubnetCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Secondary Client Subnet
  SecondaryServerPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Ref SecondaryAvailabilityZone
      CidrBlock: !Ref SecondaryServerPrivateSubnetCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Secondary Server Subnet
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Public Routes
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PrimaryManagementSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PrimaryManagementPublicSubnet
  PrimaryClientSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PrimaryClientPublicSubnet
  SecondaryManagementSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref SecondaryManagementPublicSubnet
  SecondaryClientSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref SecondaryClientPublicSubnet
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName} Private Routes
  PrimaryServerSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrimaryServerPrivateSubnet
  SecondaryServerSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref SecondaryServerPrivateSubnet

Outputs:
  VPCID:
    Description: VPC ID
    Value: !Ref VPC
    # Export:
    #   Name:
  PrimaryManagementPublicSubnetID:
    Description: Primary Management Public Subnet ID
    Value: !Ref PrimaryManagementPublicSubnet
    # Export:
    #   Name:
  PrimaryClientPublicSubnetID:
    Description: Primary Client Public Subnet ID
    Value: !Ref PrimaryClientPublicSubnet
    # Export:
    #   Name:
  PrimaryServerPrivateSubnetID:
    Description: Primary Server Private Subnet ID
    Value: !Ref PrimaryServerPrivateSubnet
    # Export:
    #   Name:
  SecondaryManagementPublicSubnetID:
    Description: Secondary Management Public Subnet ID
    Value: !Ref SecondaryManagementPublicSubnet
    # Export:
    #   Name:
  SecondaryClientPublicSubnetID:
    Description: Secondary Client Public Subnet ID
    Value: !Ref SecondaryClientPublicSubnet
    # Export:
    #   Name:
  SecondaryServerPrivateSubnetID:
    Description: Secondary Server Private Subnet ID
    Value: !Ref SecondaryServerPrivateSubnet
    # Export:
    #   Name: